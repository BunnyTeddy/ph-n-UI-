import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'features/auth/screens/login_screen.dart';
import 'features/auth/screens/register_screen.dart';
import 'features/home/screens/home_screen.dart';
import 'features/plant_management/screens/add_plant_screen.dart';
import 'features/plant_management/screens/edit_plant_screen.dart';
import 'features/diary/screens/diary_list_screen.dart';
import 'features/diary/screens/add_diary_screen.dart';
import 'features/gallery/screens/gallery_screen.dart';
import 'features/settings/screens/settings_screen.dart';
import 'features/statistics/screens/statistics_screen.dart';
import 'providers/plant_provider.dart';

/// Development Screen Selector
/// M√†n h√¨nh n√†y cho ph√©p xem t·∫•t c·∫£ c√°c screens m√† kh√¥ng c·∫ßn Firebase
/// 
/// ƒê·ªÉ s·ª≠ d·ª•ng: Thay ƒë·ªïi initialRoute trong app.dart th√†nh '/dev'
class DevScreenSelector extends StatefulWidget {
  const DevScreenSelector({super.key});

  @override
  State<DevScreenSelector> createState() => _DevScreenSelectorState();
}

class _DevScreenSelectorState extends State<DevScreenSelector> {
  // Mock Plant ID cho dev mode - kh√¥ng c·∫ßn Firebase
  static const String mockPlantId = 'mock-plant-001';

  @override
  void initState() {
    super.initState();
    // Load mock data when entering dev mode
    WidgetsBinding.instance.addPostFrameCallback((_) {
      context.read<PlantProvider>().loadMockData();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('üé® Screen Selector - Dev Mode'),
        centerTitle: true,
      ),
      body: ListView(
        padding: const EdgeInsets.all(16),
        children: [
          const Text(
            'Ch·ªçn m√†n h√¨nh ƒë·ªÉ xem:',
            style: TextStyle(
              fontSize: 20,
              fontWeight: FontWeight.bold,
            ),
          ),
          const SizedBox(height: 8),
          const Text(
            'T·∫•t c·∫£ screens c√≥ th·ªÉ xem m√† kh√¥ng c·∫ßn Firebase',
            style: TextStyle(color: Colors.grey),
          ),
          const SizedBox(height: 24),

          // Authentication Screens
          _buildSection('üîê Authentication (Sprint 1)', [
            _ScreenTile(
              title: 'Login Screen',
              subtitle: 'M√†n h√¨nh ƒëƒÉng nh·∫≠p',
              icon: Icons.login,
              color: Colors.blue,
              onTap: () => _navigateTo(context, const LoginScreen()),
            ),
            _ScreenTile(
              title: 'Register Screen',
              subtitle: 'M√†n h√¨nh ƒëƒÉng k√Ω',
              icon: Icons.person_add,
              color: Colors.blue,
              onTap: () => _navigateTo(context, const RegisterScreen()),
            ),
          ]),

          const SizedBox(height: 24),

          // Home Screens
          _buildSection('üè† Home (Sprint 2)', [
            _ScreenTile(
              title: 'Home Screen',
              subtitle: 'Trang ch·ªß v·ªõi dashboard',
              icon: Icons.home,
              color: Colors.green,
              onTap: () => _navigateTo(context, const HomeScreen()),
            ),
          ]),

          const SizedBox(height: 24),

          // Plant Management
          _buildSection('üå± Plant Management (Sprint 3)', [
            _ScreenTile(
              title: 'Add Plant Screen',
              subtitle: 'Th√™m c√¢y m·ªõi',
              icon: Icons.add_circle,
              color: Colors.teal,
              onTap: () => _navigateTo(context, const AddPlantScreen()),
            ),
            _ScreenTile(
              title: 'Edit Plant Screen',
              subtitle: 'S·ª≠a th√¥ng tin c√¢y (mock data)',
              icon: Icons.edit,
              color: Colors.teal,
              onTap: () => _navigateTo(
                context,
                const EditPlantScreen(plantId: _DevScreenSelectorState.mockPlantId),
              ),
            ),
          ]),

          const SizedBox(height: 24),

          // Diary
          _buildSection('üìî Diary (Sprint 4)', [
            _ScreenTile(
              title: 'Diary List Screen',
              subtitle: 'Danh s√°ch nh·∫≠t k√Ω (mock data)',
              icon: Icons.book,
              color: Colors.orange,
              onTap: () => _navigateTo(
                context,
                const DiaryListScreen(plantId: _DevScreenSelectorState.mockPlantId),
              ),
            ),
            _ScreenTile(
              title: 'Add Diary Screen',
              subtitle: 'Th√™m nh·∫≠t k√Ω (mock data)',
              icon: Icons.add_box,
              color: Colors.orange,
              onTap: () => _navigateTo(
                context,
                const AddDiaryScreen(plantId: _DevScreenSelectorState.mockPlantId),
              ),
            ),
          ]),

          const SizedBox(height: 24),

          // Gallery
          _buildSection('üì∑ Gallery (Sprint 5)', [
            _ScreenTile(
              title: 'Gallery Screen',
              subtitle: 'Th∆∞ vi·ªán ·∫£nh (mock data)',
              icon: Icons.photo_library,
              color: Colors.purple,
              onTap: () => _navigateTo(
                context,
                const GalleryScreen(plantId: _DevScreenSelectorState.mockPlantId),
              ),
            ),
          ]),

          const SizedBox(height: 24),

          // Settings & Statistics
          _buildSection('‚öôÔ∏è Settings & Statistics (Sprint 6)', [
            _ScreenTile(
              title: 'Settings Screen',
              subtitle: 'C√†i ƒë·∫∑t ·ª©ng d·ª•ng',
              icon: Icons.settings,
              color: Colors.grey,
              onTap: () => _navigateTo(context, const SettingsScreen()),
            ),
            _ScreenTile(
              title: 'Statistics Screen',
              subtitle: 'Th·ªëng k√™ & b√°o c√°o',
              icon: Icons.bar_chart,
              color: Colors.indigo,
              onTap: () => _navigateTo(context, const StatisticsScreen()),
            ),
          ]),

          const SizedBox(height: 32),

          // Instructions
          Card(
            color: Colors.blue[50],
            child: Padding(
              padding: const EdgeInsets.all(16),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Row(
                    children: [
                      Icon(Icons.info, color: Colors.blue[700]),
                      const SizedBox(width: 8),
                      Text(
                        'H∆∞·ªõng d·∫´n',
                        style: TextStyle(
                          fontSize: 16,
                          fontWeight: FontWeight.bold,
                          color: Colors.blue[700],
                        ),
                      ),
                    ],
                  ),
                  const SizedBox(height: 12),
                  const Text(
                    '1. Ch·ªçn screen t·ª´ danh s√°ch tr√™n\n'
                    '2. T·∫•t c·∫£ screens c√≥ th·ªÉ xem ngay (d√πng mock plantId)\n'
                    '3. Data s·∫Ω l√† mock data (ch∆∞a c√≥ Firebase)\n'
                    '4. M·ªôt s·ªë screens c√≥ th·ªÉ b√°o l·ªói n·∫øu ch∆∞a c√≥ data\n'
                    '5. ƒê·ªÉ t·∫Øt dev mode: ƒê·ªïi initialRoute v·ªÅ AppRoutes.login',
                    style: TextStyle(height: 1.5),
                  ),
                ],
              ),
            ),
          ),

          const SizedBox(height: 16),
        ],
      ),
    );
  }

  Widget _buildSection(String title, List<Widget> children) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          title,
          style: const TextStyle(
            fontSize: 16,
            fontWeight: FontWeight.bold,
            color: Colors.black87,
          ),
        ),
        const SizedBox(height: 12),
        ...children,
      ],
    );
  }

  void _navigateTo(BuildContext context, Widget screen) {
    Navigator.push(
      context,
      MaterialPageRoute(builder: (context) => screen),
    );
  }
}

class _ScreenTile extends StatelessWidget {
  final String title;
  final String subtitle;
  final IconData icon;
  final Color color;
  final VoidCallback onTap;

  const _ScreenTile({
    required this.title,
    required this.subtitle,
    required this.icon,
    required this.color,
    required this.onTap,
  });

  @override
  Widget build(BuildContext context) {
    return Card(
      margin: const EdgeInsets.only(bottom: 8),
      child: ListTile(
        leading: CircleAvatar(
          backgroundColor: color.withAlpha(51),
          child: Icon(icon, color: color),
        ),
        title: Text(
          title,
          style: const TextStyle(fontWeight: FontWeight.w600),
        ),
        subtitle: Text(subtitle),
        trailing: const Icon(Icons.arrow_forward_ios, size: 16),
        onTap: onTap,
      ),
    );
  }
}

